name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.22.x, 1.23.x, 1.24.x, 1.25.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        cache: false

    - name: Install dependencies
      run: go mod download

    - name: Run unit tests
      run: go test -v -race ./...

    - name: Run vet
      run: go vet ./...

    - name: Run integration tests
      run: |
        # Skip integration tests in CI for now - they require Docker Compose setup
        # that may not be available in all GitHub Actions environments
        echo "Skipping integration tests in CI environment"
        # docker-compose -f docker-compose.integration.yml up -d
        # sleep 10  # Wait for collectors to start
        # go test -v -tags=integration -run="TestIntegration" ./...
        # docker-compose -f docker-compose.integration.yml down

    - name: Build examples
      run: make examples

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.x'
        cache: false

    - name: Install golangci-lint
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.64.8

    - name: Run golangci-lint
      run: golangci-lint run --timeout=5m --verbose

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.x'
        cache: false

    - name: Run gosec security scan
      uses: securego/gosec@master
      with:
        args: ./...

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.x'
        cache: false

    - name: Generate coverage report
      run: |
        go test -race -coverprofile=coverage.out -covermode=atomic ./...
        go tool cover -html=coverage.out -o coverage.html

    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.html
