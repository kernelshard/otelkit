name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.x'
        cache: true

    - name: Run tests
      run: make test

    - name: Build binaries
      run: |
        rm -rf dist
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/otelkit-linux-amd64 ./...
        GOOS=darwin GOARCH=amd64 go build -o dist/otelkit-darwin-amd64 ./...
        GOOS=darwin GOARCH=arm64 go build -o dist/otelkit-darwin-arm64 ./...
        GOOS=windows GOARCH=amd64 go build -o dist/otelkit-windows-amd64.exe ./...

    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/otelkit-linux-amd64
          dist/otelkit-darwin-amd64
          dist/otelkit-darwin-arm64
          dist/otelkit-windows-amd64.exe
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-docs:
    name: Publish Documentation
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.24.x'
        cache: true

    - name: Generate godoc
      run: |
        go install golang.org/x/tools/cmd/godoc@latest
        mkdir -p docs-output
        godoc -http=:6060 &
        sleep 10
        wget -r -np -N -E -p -k http://localhost:6060/pkg/github.com/samims/otelkit/ -P docs-output/ || true

    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs-output/localhost:6060
        keep_files: true

  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}


    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          samims/otelkit:latest
          samims/otelkit:${{ github.ref_name }}
        platforms: linux/amd64,linux/arm64
